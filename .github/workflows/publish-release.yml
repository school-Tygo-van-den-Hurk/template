name: publish-release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:

  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v30

      - name: Build packages from flake
        id: build-packages-from-flake
        run: |
          mkdir --parents artifacts

          version="${{ github.ref_name }}"
          system=$(nix eval --impure --expr 'builtins.currentSystem' --json | jq -r .)

          echo "building for ${system}:"
          for package in $(nix flake show --json | jq -r ".packages.\"${system}\" | keys[]"); do

            echo "Building package: ${package} (${system})"
            nix build .#${package}

            tar czf "artifacts/${package}-${version}-${system}.tar.gz" -C result .

            if [ -d result ]; then
              cp result/ artifacts/${package}-${version}-${system}/ --recursive
            else
              cp result artifacts/${package}-${version}-${system}
            fi

            rm -rf result
          done

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v3
        id: git-cliff
        with:
          config: .config/changelog.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Print the changelog
        run: cat "${{ steps.git-cliff.outputs.changelog }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: 'artifacts/**/*.tar.gz'
          fail_on_unmatched_files: true
          body: ${{ steps.git-cliff.outputs.content }}

      - name: Commit changelog
        run: |
          branch="main"
          git switch $branch 2>/dev/null || git switch -c $branch
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          set +e
          git add CHANGELOG.md
          git commit --message "docs(changelog): Update changelog"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git $branch
